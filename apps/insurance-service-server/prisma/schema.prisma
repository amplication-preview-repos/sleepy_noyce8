datasource db {
  provider = "mongodb"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model InsurancePolicy {
  claims           Claim[]
  coverageAmount   Float?
  createdAt        DateTime        @default(now())
  customer         Customer?       @relation(fields: [customerId], references: [id])
  customerId       String?         @db.ObjectId
  effectiveDate    DateTime?
  expiryDate       DateTime?
  id               String          @id @default(auto()) @map("_id") @db.ObjectId
  insuranceAgent   InsuranceAgent? @relation(fields: [insuranceAgentId], references: [id])
  insuranceAgentId String?         @db.ObjectId
  policyNumber     String?
  premiumAmount    Float?
  updatedAt        DateTime        @updatedAt
}

model Customer {
  address           String?
  createdAt         DateTime          @default(now())
  email             String?
  firstName         String?
  id                String            @id @default(auto()) @map("_id") @db.ObjectId
  insurancePolicies InsurancePolicy[]
  lastName          String?
  phone             String?
  updatedAt         DateTime          @updatedAt
}

model Claim {
  amountClaimed     Float?
  claimNumber       String?
  createdAt         DateTime         @default(now())
  dateOfClaim       DateTime?
  description       String?
  id                String           @id @default(auto()) @map("_id") @db.ObjectId
  insurancePolicy   InsurancePolicy? @relation(fields: [insurancePolicyId], references: [id])
  insurancePolicyId String?          @db.ObjectId
  status            EnumClaimStatus?
  updatedAt         DateTime         @updatedAt
}

model InsuranceAgent {
  agencyName        String?
  createdAt         DateTime          @default(now())
  email             String?
  firstName         String?
  id                String            @id @default(auto()) @map("_id") @db.ObjectId
  insurancePolicies InsurancePolicy[]
  lastName          String?
  phone             String?
  updatedAt         DateTime          @updatedAt
}

enum EnumClaimStatus {
  Option1
}

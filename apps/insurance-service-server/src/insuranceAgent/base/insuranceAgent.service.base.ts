/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  InsuranceAgent as PrismaInsuranceAgent,
  InsurancePolicy as PrismaInsurancePolicy,
} from "@prisma/client";

export class InsuranceAgentServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.InsuranceAgentCountArgs, "select">
  ): Promise<number> {
    return this.prisma.insuranceAgent.count(args);
  }

  async insuranceAgents(
    args: Prisma.InsuranceAgentFindManyArgs
  ): Promise<PrismaInsuranceAgent[]> {
    return this.prisma.insuranceAgent.findMany(args);
  }
  async insuranceAgent(
    args: Prisma.InsuranceAgentFindUniqueArgs
  ): Promise<PrismaInsuranceAgent | null> {
    return this.prisma.insuranceAgent.findUnique(args);
  }
  async createInsuranceAgent(
    args: Prisma.InsuranceAgentCreateArgs
  ): Promise<PrismaInsuranceAgent> {
    return this.prisma.insuranceAgent.create(args);
  }
  async updateInsuranceAgent(
    args: Prisma.InsuranceAgentUpdateArgs
  ): Promise<PrismaInsuranceAgent> {
    return this.prisma.insuranceAgent.update(args);
  }
  async deleteInsuranceAgent(
    args: Prisma.InsuranceAgentDeleteArgs
  ): Promise<PrismaInsuranceAgent> {
    return this.prisma.insuranceAgent.delete(args);
  }

  async findInsurancePolicies(
    parentId: string,
    args: Prisma.InsurancePolicyFindManyArgs
  ): Promise<PrismaInsurancePolicy[]> {
    return this.prisma.insuranceAgent
      .findUniqueOrThrow({
        where: { id: parentId },
      })
      .insurancePolicies(args);
  }
}
